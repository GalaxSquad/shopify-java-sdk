// Generated from graphql_java_gen gem

package com.sdk.shopify.shopify;

import com.shopify.graphql.support.Query;

/**
* Comment events are generated by staff members of a shop.
* They are created when a staff member adds a comment to the timeline of an order, draft order,
* customer, or transfer.
*/
public class CommentEventQuery extends Query<CommentEventQuery> {
    CommentEventQuery(StringBuilder _queryBuilder) {
        super(_queryBuilder);

        startField("id");
    }

    /**
    * The action that occured.
    */
    public CommentEventQuery action() {
        startField("action");

        return this;
    }

    /**
    * The name of the app that created the event.
    */
    public CommentEventQuery appTitle() {
        startField("appTitle");

        return this;
    }

    /**
    * The attachments associated with the comment event.
    */
    public CommentEventQuery attachments(CommentEventAttachmentQueryDefinition queryDef) {
        startField("attachments");

        _queryBuilder.append('{');
        queryDef.define(new CommentEventAttachmentQuery(_queryBuilder));
        _queryBuilder.append('}');

        return this;
    }

    /**
    * Whether the event was created by an app.
    */
    public CommentEventQuery attributeToApp() {
        startField("attributeToApp");

        return this;
    }

    /**
    * Whether the event was caused by an admin user.
    */
    public CommentEventQuery attributeToUser() {
        startField("attributeToUser");

        return this;
    }

    /**
    * The name of the user that authored the comment event.
    */
    public CommentEventQuery author(StaffMemberQueryDefinition queryDef) {
        startField("author");

        _queryBuilder.append('{');
        queryDef.define(new StaffMemberQuery(_queryBuilder));
        _queryBuilder.append('}');

        return this;
    }

    /**
    * Whether the comment event can be deleted. If true, then the comment event can be deleted.
    */
    public CommentEventQuery canDelete() {
        startField("canDelete");

        return this;
    }

    /**
    * Whether the comment event can be edited. If true, then the comment event can be edited.
    */
    public CommentEventQuery canEdit() {
        startField("canEdit");

        return this;
    }

    /**
    * The date and time when the event was created.
    */
    public CommentEventQuery createdAt() {
        startField("createdAt");

        return this;
    }

    /**
    * Whether the event is critical.
    */
    public CommentEventQuery criticalAlert() {
        startField("criticalAlert");

        return this;
    }

    /**
    * Whether the comment event has been edited. If true, then the comment event has been edited.
    */
    public CommentEventQuery edited() {
        startField("edited");

        return this;
    }

    /**
    * The object reference associated with the comment event. For example, a product or discount).
    */
    public CommentEventQuery embed(CommentEventEmbedQueryDefinition queryDef) {
        startField("embed");

        _queryBuilder.append('{');
        queryDef.define(new CommentEventEmbedQuery(_queryBuilder));
        _queryBuilder.append('}');

        return this;
    }

    /**
    * Human readable text that describes the event.
    */
    public CommentEventQuery message() {
        startField("message");

        return this;
    }

    /**
    * The raw body of the comment event.
    */
    public CommentEventQuery rawMessage() {
        startField("rawMessage");

        return this;
    }

    /**
    * The parent subject to which the comment event belongs.
    */
    public CommentEventQuery subject(CommentEventSubjectQueryDefinition queryDef) {
        startField("subject");

        _queryBuilder.append('{');
        queryDef.define(new CommentEventSubjectQuery(_queryBuilder));
        _queryBuilder.append('}');

        return this;
    }
}
